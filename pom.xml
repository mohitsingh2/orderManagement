<project xmlns="http://maven.apache.org/POM/4.0.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>com.sopra.steria</groupId>
  <artifactId>orderManagement</artifactId>
  <version>0.0.1-SNAPSHOT</version>
  <packaging>war</packaging>
  <properties>
		<java.version>1.6</java.version>

		<jta.version>1.1</jta.version>
		<!-- main frameworks versions -->
		<spring.version>4.1.2.RELEASE</spring.version>
		<quartz.version>2.2.1</quartz.version>
		<springdata.version>1.9.2.RELEASE</springdata.version>
		<springsecurity.version>3.2.4.RELEASE</springsecurity.version>
		<beanlib.version>3.2.1</beanlib.version>
		<cxf.version>2.7.8</cxf.version>
		<cxfwadl.version>2.7.8</cxfwadl.version>

		<hibernate.jpa.version>4.3.5.Final</hibernate.jpa.version>
		<ehcache.version>2.8.1</ehcache.version>
		<postgresql.version>9.3-1101-jdbc41</postgresql.version>
		<h2.version>1.3.175</h2.version>

		<slf4j.version>1.7.7</slf4j.version>
		<logback.version>1.1.2</logback.version>
		<junit.version>4.11</junit.version>
		<mockito.version>1.9.5</mockito.version>
		<cargo.version>1.4.8</cargo.version>
		<jaxp.version>1.4.2</jaxp.version>
		<jackson.version>2.4.5</jackson.version>
		<commonscodec.version>1.9</commonscodec.version>
		<hikaricp.version>1.4.0</hikaricp.version>
		<hibernatecore.version>4.3.5.Final</hibernatecore.version>
		<ojdbc6.version>11.2.0.3</ojdbc6.version>
		<mavenclean.version>2.5</mavenclean.version>
		<maveninstall.version>2.4</maveninstall.version>
		<mavenjar.version>2.4</mavenjar.version>
		<mavenrar.version>2.3</mavenrar.version>
		<mavenwar.version>2.3</mavenwar.version>
		<mavencompiler.version>3.1</mavencompiler.version>
		<mavensurefire.version>2.15</mavensurefire.version>
		<mavendependency.version>2.8</mavendependency.version>
		<mavendeploy.version>2.7</mavendeploy.version>
		<mavenresources.version>2.6</mavenresources.version>
		<maveneclipse.version>2.9</maveneclipse.version>
		<mavensite.version>3.3</mavensite.version>
		<mavenjavadoc.version>2.9.1</mavenjavadoc.version>
		<mavencheckstyle.version>2.12</mavencheckstyle.version>
		<mavenpmd.version>3.0.1</mavenpmd.version>
		<mavenfindbugs.version>3.0.3</mavenfindbugs.version>
		<mavencobertura.version>2.7</mavencobertura.version>

	
		<!-- should be displayed on home page -->
		<build.timestamp>${maven.build.timestamp}</build.timestamp>
		<maven.build.timestamp.format>dd/MM/yyyy - HH:mm:ss</maven.build.timestamp.format>

	</properties>



		<dependencies>
			<!-- =================== -->
			<!-- framework libraries -->

			<!-- ******************* -->
			<!-- Spring dependencies -->
			<!-- ******************* -->
			<!-- Use bom to add all needed Spring dependencies -->
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-expression</artifactId>
				<version>4.2.0.RELEASE</version>
			</dependency>
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-framework-bom</artifactId>
				<version>${spring.version}</version>
				<scope>import</scope>
				<type>pom</type>
			</dependency>
			
			<!-- but exclude commons-logging as we're using jcl-over-slf4j -->
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-core</artifactId>
				<version>${spring.version}</version>
				<exclusions>
					<exclusion>
						<groupId>commons-logging</groupId>
						<artifactId>commons-logging</artifactId>
					</exclusion>
				</exclusions>
			</dependency>

			<!-- [tangi] warning: don't know if we may add both spring-data-commons 
				and spring-data-jpa -->
			<dependency>
				<groupId>org.springframework.data</groupId>
				<artifactId>spring-data-jpa</artifactId>
				<version>${springdata.version}</version>
			</dependency>

			<!-- *********************** -->
			<!-- Spring Security library -->
			<!-- *********************** -->
			<dependency>
				<groupId>org.springframework.security</groupId>
				<artifactId>spring-security-core</artifactId>
				<version>${springsecurity.version}</version>
			</dependency>
			<dependency>
				<groupId>org.springframework.security</groupId>
				<artifactId>spring-security-web</artifactId>
				<version>${springsecurity.version}</version>
			</dependency>
			<dependency>
				<groupId>org.springframework.security</groupId>
				<artifactId>spring-security-config</artifactId>
				<version>${springsecurity.version}</version>
			</dependency>
			<dependency>
				<groupId>org.springframework.security</groupId>
				<artifactId>spring-security-taglibs</artifactId>
				<version>${springsecurity.version}</version>
			</dependency>

			<!-- cglib is needed with spring because cxf is proxying classes -->
			<dependency>
				<groupId>cglib</groupId>
				<artifactId>cglib-nodep</artifactId>
				<version>2.1_3</version>
			</dependency>

			<!-- **************** -->
			<!-- CXF dependencies -->
			<!-- **************** -->
			<dependency>
				<groupId>org.apache.cxf</groupId>
				<artifactId>cxf-rt-transports-http</artifactId>
				<version>${cxf.version}</version>
			</dependency>

			<dependency>
				<groupId>org.apache.cxf</groupId>
				<artifactId>cxf-rt-transports-http-jetty</artifactId>
				<version>${cxf.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.cxf</groupId>
				<artifactId>cxf-rt-frontend-jaxrs</artifactId>
				<version>${cxf.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.cxf</groupId>
				<artifactId>cxf-rt-rs-service-description</artifactId>
				<version>3.1.11</version>
			</dependency>


			<!-- This library is scoped as runtime so that it is included in the war 
				and to avoid ClassNotFoundException: javax.xml.transform.stax.StAXSource 
				with Jonas 5.2.x -->
			<!-- Not needed with JBoss, this library is in the JDK -->
			<dependency>
				<groupId>javax.xml</groupId>
				<artifactId>jaxp-api</artifactId>
				<version>${jaxp.version}</version>
				<scope>runtime</scope>
			</dependency>

			<dependency>
				<groupId>com.fasterxml.jackson.core</groupId>
				<artifactId>jackson-annotations</artifactId>
				<version>${jackson.version}</version>
			</dependency>
			<dependency>
			    <groupId>com.fasterxml.jackson.jaxrs</groupId>
			    <artifactId>jackson-jaxrs-json-provider</artifactId>
			    <version>2.5.4</version>
			</dependency>
			<dependency>
			<groupId>com.fasterxml.jackson.core</groupId>
				<artifactId>jackson-databind</artifactId>
				<version>2.4.1</version>
			</dependency>
			<dependency>
				<groupId>commons-codec</groupId>
				<artifactId>commons-codec</artifactId>
				<version>${commonscodec.version}</version>
			</dependency>

			<dependency>
				<groupId>com.zaxxer</groupId>
				<artifactId>HikariCP</artifactId>
				<version>${hikaricp.version}</version>
			</dependency>


			<!-- ************************ -->
			<!-- Hibernate JPA dependency -->
			<!-- ************************ -->
			<dependency>
				<groupId>org.hibernate</groupId>
				<artifactId>hibernate-entitymanager</artifactId>
				<version>${hibernate.jpa.version}</version>
			</dependency>

			<dependency>
				<groupId>org.hibernate</groupId>
				<artifactId>hibernate-core</artifactId>
				<version>${hibernatecore.version}</version>
			</dependency>

			<dependency>
				<groupId>javax.transaction</groupId>
				<artifactId>jta</artifactId>
				<version>${jta.version}</version>
			</dependency>

			<!-- JPA 2.1 specification -->
			<dependency>
				<groupId>org.hibernate.javax.persistence</groupId>
				<artifactId>hibernate-jpa-2.1-api</artifactId>
				<version>1.0.0.Final</version>
			</dependency>

			<dependency>
				<groupId>net.sf.ehcache</groupId>
				<artifactId>ehcache</artifactId>
				<version>${ehcache.version}</version>
			</dependency>

			<dependency>
				<groupId>org.hibernate</groupId>
				<artifactId>hibernate-ehcache</artifactId>
				<version>${hibernate.jpa.version}</version>
				<exclusions>
					<exclusion>
						<groupId>net.sf.ehcache</groupId>
						<artifactId>ehcache-core</artifactId>
					</exclusion>
				</exclusions>
			</dependency>

			<dependency>
				<groupId>javax.validation</groupId>
				<artifactId>validation-api</artifactId>
				<version>1.0.0.GA</version>
			</dependency>

			<dependency>
				<groupId>net.sf.beanlib</groupId>
				<artifactId>beanlib-hibernate</artifactId>
				<version>${beanlib.version}</version>
				<exclusions>
					<exclusion>
						<groupId>springframework</groupId>
						<artifactId>spring</artifactId>
					</exclusion>
					<exclusion>
						<groupId>log4j</groupId>
						<artifactId>log4j</artifactId>
					</exclusion>
					<exclusion>
						<groupId>org.hibernate</groupId>
						<artifactId>hibernate</artifactId>
					</exclusion>
				</exclusions>
			</dependency>
			<!-- https://mvnrepository.com/artifact/mysql/mysql-connector-java -->
			<dependency>
			    <groupId>mysql</groupId>
			    <artifactId>mysql-connector-java</artifactId>
			    <version>5.1.6</version>
			</dependency>


			

			<!-- ******************** -->
			<!-- Logging dependencies -->
			<!-- ******************** -->
			<!-- slf4j + logback + commons logging (JCL) and log4j bridges -->
			<dependency>
				<groupId>org.slf4j</groupId>
				<artifactId>slf4j-api</artifactId>
				<version>${slf4j.version}</version>
			</dependency>
			<dependency>
				<groupId>ch.qos.logback</groupId>
				<artifactId>logback-classic</artifactId>
				<version>${logback.version}</version>
			</dependency>
			<dependency>
				<groupId>org.slf4j</groupId>
				<artifactId>jcl-over-slf4j</artifactId>
				<version>${slf4j.version}</version>
			</dependency>
			<!-- Transaction dependency is required with Quartz integration -->
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-tx</artifactId>
				<version>${spring.version}</version>
			</dependency>

			<!-- Quartz framework -->
			<dependency>
				<groupId>org.quartz-scheduler</groupId>
				<artifactId>quartz</artifactId>
				<version>${quartz.version}</version>
			</dependency>
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-context-support</artifactId>
				<version>${spring.version}</version>
			</dependency>
			<!-- <dependency> <groupId>org.slf4j</groupId> <artifactId>log4j-over-slf4j</artifactId> 
				<version>${slf4j.version}</version> </dependency> -->

		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-context</artifactId>
			<version>${spring.version}</version>
		</dependency>

		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-orm</artifactId>
			<version>${spring.version}</version>
		</dependency>

		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-test</artifactId>
			<version>${spring.version}</version>
			<scope>test</scope>
		</dependency>
				
		<!-- test dependencies are defined for all sub modules -->
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>${junit.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.mockito</groupId>
			<artifactId>mockito-all</artifactId>
			<version>${mockito.version}</version>
			<scope>test</scope>
		</dependency>
	</dependencies>
				
	
	<build>
		<pluginManagement>
			<plugins>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-clean-plugin</artifactId>
					<version>${mavenclean.version}</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-install-plugin</artifactId>
					<version>${maveninstall.version}</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-jar-plugin</artifactId>
					<version>${mavenjar.version}</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-rar-plugin</artifactId>
					<version>${mavenrar.version}</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-compiler-plugin</artifactId>
					<version>${mavencompiler.version}</version>
					<configuration>
						<source>${java.version}</source>
						<target>${java.version}</target>
					</configuration>
				</plugin>

				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-surefire-plugin</artifactId>
					<version>${mavensurefire.version}</version>
					<configuration>
						<skipTests>${skipTests}</skipTests>
					</configuration>
				</plugin>

				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-war-plugin</artifactId>
					<version>${mavenwar.version}</version>
				</plugin>

				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-dependency-plugin</artifactId>
					<version>${mavendependency.version}</version>
				</plugin>

				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-deploy-plugin</artifactId>
					<version>${mavendeploy.version}</version>
				</plugin>

				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-resources-plugin</artifactId>
					<version>${mavenresources.version}</version>
					<!-- required on continuous integration platform -->
					<configuration>
						<encoding>ISO-8859-15</encoding>
					</configuration>
				</plugin>

				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-eclipse-plugin</artifactId>
					<version>${maveneclipse.version}</version>
					<configuration>
						<downloadSources>true</downloadSources>
					</configuration>
				</plugin>

				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-site-plugin</artifactId>
					<version>${mavensite.version}</version>
					<configuration>
						<inputEncoding>ISO-8859-15</inputEncoding>
						<outputEncoding>UTF-8</outputEncoding>
					</configuration>
				</plugin>

				<!-- This definition is used to generate standalone javadocs -->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-javadoc-plugin</artifactId>
					<version>${mavenjavadoc.version}</version>
					<configuration>
						<encoding>ISO-8859-15</encoding>
						<javadocVersion>1.6</javadocVersion>
					</configuration>
					<executions>
						<execution>
							<id>aggregate</id>
							<goals>
								<goal>aggregate</goal>
							</goals>
							<phase>site</phase>
						</execution>
					</executions>
				</plugin>

				<plugin>
					<groupId>org.codehaus.cargo</groupId>
					<artifactId>cargo-maven2-plugin</artifactId>
					<version>${cargo.version}</version>
				</plugin>

				<plugin>
					<groupId>org.codehaus.mojo</groupId>
					<artifactId>build-helper-maven-plugin</artifactId>
					<version>1.8</version>
				</plugin>

				<plugin>
					<groupId>org.apache.cxf</groupId>
					<artifactId>cxf-codegen-plugin</artifactId>
					<version>${cxf.version}</version>
				</plugin>

				<!--This plugin's configuration is used to store Eclipse m2e settings 
					only. It has no influence on the Maven build itself. -->
				<!-- Needed with Eclipse Indigo / m2e 1.0 because there are no m2e connectors 
					for cxf-codegen-plugin for the moment -->
				<!-- See http://wiki.eclipse.org/M2E_plugin_execution_not_covered -->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-checkstyle-plugin</artifactId>
					<version>${mavencheckstyle.version}</version>
				</plugin>

				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-pmd-plugin</artifactId>
					<version>${mavenpmd.version}</version>
				</plugin>

				<plugin>
					<groupId>org.codehaus.mojo</groupId>
					<artifactId>findbugs-maven-plugin</artifactId>
					<version>${mavenfindbugs.version}</version>
				</plugin>


				<!--This plugin's configuration is used to store Eclipse m2e settings 
					only. It has no influence on the Maven build itself. -->
				<!-- Needed with Eclipse Indigo / m2e 1.0 because there are no m2e connectors 
					for cxf-codegen-plugin for the moment -->
				<!-- See http://wiki.eclipse.org/M2E_plugin_execution_not_covered -->
				<plugin>
					<groupId>org.eclipse.m2e</groupId>
					<artifactId>lifecycle-mapping</artifactId>
					<version>1.0.0</version>
					<configuration>
						<lifecycleMappingMetadata>
							<pluginExecutions>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>org.apache.cxf</groupId>
										<artifactId>cxf-codegen-plugin</artifactId>
										<versionRange>[2.2.1,)</versionRange>
										<goals>
											<goal>wsdl2java</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<execute />
									</action>
								</pluginExecution>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>org.apache.maven.plugins</groupId>
										<artifactId>maven-dependency-plugin</artifactId>
										<versionRange>[2.3,)</versionRange>
										<goals>
											<goal>unpack</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<!-- cannot execute because with m2e, the source is a directory. 
											See http://jira.codehaus.org/browse/MDEP-98 -->
										<ignore />
									</action>
								</pluginExecution>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>org.apache.maven.plugins</groupId>
										<artifactId>maven-dependency-plugin</artifactId>
										<versionRange>[2.8,)</versionRange>
										<goals>
											<goal>analyze-dep-mgt</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore />
									</action>
								</pluginExecution>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>org.codehaus.mojo</groupId>
										<artifactId>build-helper-maven-plugin</artifactId>
										<versionRange>[1.8,)</versionRange>
										<goals>
											<goal>add-source</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<execute>
											<runOnConfiguration>true</runOnConfiguration>
											<runOnIncremental>true</runOnIncremental>
										</execute>
									</action>
								</pluginExecution>
							</pluginExecutions>
						</lifecycleMappingMetadata>
					</configuration>
				</plugin>
			</plugins>
		</pluginManagement>
		<plugins>
			<plugin>
				<artifactId>maven-dependency-plugin</artifactId>
				<!-- ensure dependency version are not overridden, build fail if bad 
					dependency management -->
				<executions>
					<execution>
						<goals>
							<goal>analyze-dep-mgt</goal>
						</goals>
						<phase>validate</phase>
						<configuration>
							<failBuild>true</failBuild>
							<ignoreDirect>false</ignoreDirect>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>cobertura-maven-plugin</artifactId>
			</plugin>
		</plugins>
		<extensions>
			<extension>
				<groupId>org.apache.maven.wagon</groupId>
				<artifactId>wagon-ftp</artifactId>
				<version>1.0-beta-6</version>
			</extension>
		</extensions>
		
		<resources>
    	                 <resource>
                           <directory>src/main/resources</directory>
                           <excludes>
                                  <exclude>cis.properties</exclude>
                                  <exclude>logback.xml</exclude>
                           </excludes>
                     </resource>
              </resources>
		
	</build>

	<reporting>
		<plugins>
			<!-- This definition is used to generate javadocs during site generation -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-javadoc-plugin</artifactId>
				<version>${mavenjavadoc.version}</version>
				<configuration>
					<encoding>ISO-8859-15</encoding>
					<javadocVersion>1.6</javadocVersion>
					<stylesheet>maven</stylesheet>
					<detectLinks>false</detectLinks>
				</configuration>
				<reportSets>
					<reportSet>
						<id>non-aggregate</id>
						<reports>
							<report>javadoc</report>
						</reports>
					</reportSet>
					<reportSet>
						<id>aggregate</id>
						<reports>
							<report>aggregate</report>
						</reports>
					</reportSet>
				</reportSets>
			</plugin>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>findbugs-maven-plugin</artifactId>
				<version>${mavenfindbugs.version}</version>
				<configuration>
					<!-- Enables analysis which takes more memory but finds more bugs. If 
						you run out of memory, changes the value of the effort element to 'low'. -->
					<effort>Low</effort>
					<!-- Reports all bugs (other values are medium and max) -->
					<threshold>Low</threshold>
					<!-- Produces XML report -->
					<xmlOutput>true</xmlOutput>
				</configuration>
			</plugin>
		</plugins>
	</reporting>
  
</project>